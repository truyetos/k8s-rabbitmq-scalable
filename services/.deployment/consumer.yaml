apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-deployment
  labels:
    app: consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
      - name: consumer
        image: truyet/consumer:1.0
        imagePullPolicy: Always
        env:
        - name: URI
          value: "amqp://demo:demo@single-node.rabbitmq:5672/"
        - name: EXCHANGE
          value: "scalable"
        - name: QUEUE
          value: "scalable-queue"
        - name: CONSUMER_TAG
          value: "scalable-consumer"
        - name: VERBOSE
          value: "true"
        - name: AUTO_ACK
          value: "false"
---
# Add keda to the consumer deployment
apiVersion: v1
kind: Secret
metadata:
  name: keda-rabbitmq-secret
data:
  host: "YW1xcDovL2RlbW86ZGVtb0BzaW5nbGUtbm9kZS5yYWJiaXRtcS5zdmMuY2x1c3Rlci5sb2NhbDo1NjcyLw==" # base64 encoded value of format amqp://guest:password@localhost:5672/vhost
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-rabbitmq-conn
  namespace: default
spec:
  secretTargetRef:
    - parameter: host
      name: keda-rabbitmq-secret
      key: host
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: consumer-scalableobject
  namespace: default
spec:
  scaleTargetRef:
    name: consumer-deployment
    kind: Deployment
  maxReplicaCount: 10
  minReplicaCount: 1
  pollingInterval: 10  # seconds
  cooldownPeriod: 30   # seconds
  triggers:
  - type: rabbitmq
    metadata:
      protocol: amqp
      queueName: scalable-queue
      mode: MessageRate
      value: "5"
    authenticationRef:
      name: keda-trigger-auth-rabbitmq-conn